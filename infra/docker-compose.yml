version: '3.3'

services:
  db:
    image: postgres:16.0-alpine
    container_name: foodgram-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-foodgram}
      POSTGRES_USER: ${POSTGRES_USER:-foodgram_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-foodgram_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-foodgram_user} -d ${POSTGRES_DB:-foodgram}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    build: ../backend
    container_name: foodgram-backend
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    environment:
      DB_HOST: db
      DB_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-foodgram}
      POSTGRES_USER: ${POSTGRES_USER:-foodgram_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-foodgram_password}
      SECRET_KEY: ${SECRET_KEY:-django-insecure-key}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/var/html/static/
      - media_volume:/var/html/media/
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume: